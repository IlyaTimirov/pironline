version: "3.2"
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:2.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - sync
  kafka:
    image: quay.io/debezium/kafka:2.4
    ports:
      - 9071:9071
    depends_on:
      - zookeeper
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9097,OUTSIDE://0.0.0.0:9071
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9097,OUTSIDE://localhost:9071
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR= 1
    networks:
      - sync
  connect:
    image: quay.io/debezium/connect:2.4
    ports:
      - 8083:8083
    links:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9097
      - GROUP_ID=lera
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - sync
  postgres:
    image: debezium/postgres:15-alpine
    environment:
      POSTGRES_DB: "test"
      POSTGRES_USER: "testadmin"
      POSTGRES_PASSWORD: "adminpwd"
    ports:
      - 5432:5432
    networks:
      - sync
networks:
  sync:
    driver: bridge